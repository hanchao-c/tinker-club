<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tinker.payment.server.repository.tk.mapper.PayRecordMapper">
  <resultMap id="BaseResultMap" type="org.tinker.payment.server.repository.tk.model.PayRecord">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="order_id" jdbcType="CHAR" property="orderId" />
    <result column="payment_state" jdbcType="CHAR" property="paymentState" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="notice_state" jdbcType="VARCHAR" property="noticeState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, amount, order_id, payment_state, create_time, notice_state
  </sql>
  <select id="selectByExample" parameterType="org.tinker.payment.server.repository.tk.model.PayRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment_pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.tinker.payment.server.repository.tk.model.PayRecordExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from payment_pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update payment_pay_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=CHAR},
      </if>
      <if test="record.paymentState != null">
        payment_state = #{record.paymentState,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.noticeState != null">
        notice_state = #{record.noticeState,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update payment_pay_record
    set id = #{record.id,jdbcType=CHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      order_id = #{record.orderId,jdbcType=CHAR},
      payment_state = #{record.paymentState,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      notice_state = #{record.noticeState,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>